paths:
  /api/reels/create:
    post:
      tags:
        - Reels
      summary: Create a new reel
      description: Upload a video and create a new reel
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - description
                - video
                - userId
              properties:
                name:
                  type: string
                  description: Name of the reel
                description:
                  type: string
                  description: Description of the reel
                caption:
                  type: string
                  description: Optional caption for the reel
                category:
                  type: string
                  description: Category of the reel
                userId:
                  type: string
                  description: ID of the user creating the reel
                video:
                  type: string
                  format: binary
                  description: Video file (max 100MB)
      responses:
        '201':
          description: Reel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
        '400':
          description: Invalid input or missing required fields
        '401':
          description: Unauthorized
        '500':
          description: Server error

  /api/reels:
    get:
      tags:
        - Reels
      summary: Get all reels
      description: Retrieve a list of all reels
      responses:
        '200':
          description: List of reels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reel'
        '500':
          description: Server error

  /api/reels/{id}:
    get:
      tags:
        - Reels
      summary: Get a specific reel
      description: Retrieve a specific reel by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reel details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
        '404':
          description: Reel not found
        '500':
          description: Server error

    put:
      tags:
        - Reels
      summary: Update a reel
      description: Update an existing reel
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReelUpdate'
      responses:
        '200':
          description: Reel updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reel'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Reel not found
        '500':
          description: Server error

    delete:
      tags:
        - Reels
      summary: Delete a reel
      description: Delete an existing reel
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reel deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Reel not found
        '500':
          description: Server error

components:
  schemas:
    Reel:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        caption:
          type: string
        category:
          type: string
        trailerVideo:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ReelUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        caption:
          type: string
        category:
          type: string 